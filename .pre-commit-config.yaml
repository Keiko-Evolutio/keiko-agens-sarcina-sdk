# Pre-Commit-Konfiguration f√ºr KEI-Agent Python SDK (Vereinfacht)
# F√ºhrt automatische Code-Quality-Checks vor jedem Git-Commit aus
#
# Installation: pip install pre-commit && pre-commit install
# Manueller Lauf: pre-commit run --all-files

# Alle Hooks ausf√ºhren, auch wenn einer fehlschl√§gt
fail_fast: false

# Standard-Ausschl√ºsse
default_stages: [pre-commit]
exclude: |
  (?x)^(
    \.git/.*|
    \.pytest_cache/.*|
    __pycache__/.*|
    \.mypy_cache/.*|
    \.ruff_cache/.*|
    site/.*|
    htmlcov/.*|
    \.coverage.*|
    build/.*|
    dist/.*|
    \.venv/.*|
    venv/.*
  )$

repos:
  # ============================================================================
  # ALLGEMEINE CODE-QUALIT√ÑT
  # ============================================================================

  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      # Basis-Formatierung
      - id: trailing-whitespace
        name: üßπ Entferne trailing whitespace
        description: Entfernt √ºberfl√ºssige Leerzeichen am Zeilenende

      - id: end-of-file-fixer
        name: üìù Korrigiere End-of-File
        description: Stellt sicher, dass Dateien mit einer Newline enden

      - id: check-merge-conflict
        name: üîÄ Pr√ºfe Merge-Konflikte
        description: Verhindert Commits mit Merge-Konflikt-Markern

      # Syntax-Validierung (nur einfache)
      - id: check-toml
        name: ‚öôÔ∏è Validiere TOML-Syntax
        description: Pr√ºft TOML-Dateien (pyproject.toml) auf Syntax-Fehler

  # ============================================================================
  # PYTHON CODE-QUALIT√ÑT
  # ============================================================================

  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.12.9
    hooks:
      # Ruff Linting (ersetzt flake8, pylint)
      - id: ruff
        name: üîç Ruff Linting
        description: F√ºhrt Linting mit Ruff aus (ersetzt flake8)
        args:
          - --fix
          - --exit-non-zero-on-fix
        files: '^[^/]*\.py$' # Nur Python-Dateien im Root (flache Struktur)

      # Ruff Formatierung (ersetzt black, isort)
      - id: ruff-format
        name: üé® Ruff Formatierung
        description: Formatiert Python-Code mit Ruff (ersetzt black + isort)
        files: '^[^/]*\.py$' # Nur Python-Dateien im Root

  # ============================================================================
  # LOKALE CUSTOM HOOKS
  # ============================================================================

  - repo: local
    hooks:
      # Vollst√§ndige Ruff-Pr√ºfung aller Python-Dateien (nur Warnung)
      - id: ruff-check-all
        name: üîç Ruff Check (ALLE Dateien)
        description: F√ºhrt Ruff-Check auf ALLEN Python-Dateien aus (inkl. Tests)
        entry: bash -c 'ruff check . || echo "‚ö†Ô∏è Ruff fand Probleme in Tests - siehe oben"'
        language: system
        files: '\.py$'
        pass_filenames: false

      # MkDocs Konfiguration validieren
      - id: mkdocs-validate
        name: üìö MkDocs Konfiguration validieren
        description: Validiert MkDocs-Konfiguration und baut die Doku strikt
        entry: mkdocs build --strict --verbose --clean
        language: python
        additional_dependencies:
          - mkdocs>=1.5.0,<2.0.0
          - mkdocs-material>=9.4.0,<10.0.0
          - mkdocstrings[python]>=0.23.0,<1.0.0
          - mkdocs-mermaid2-plugin>=1.1.0,<2.0.0
          - mkdocs-git-revision-date-localized-plugin>=1.2.0,<2.0.0
          - mkdocs-minify-plugin>=0.7.0,<1.0.0
          - mkdocs-redirects>=1.2.0,<2.0.0
          - mkdocs-autorefs>=0.5.0,<2.0.0
          - pymdown-extensions>=10.0.0
        files: ^(mkdocs\.yml|docs/.*)$
        pass_filenames: false

      # Validiere pyproject.toml Konsistenz
      - id: validate-pyproject
        name: ‚öôÔ∏è Validiere pyproject.toml
        description: Pr√ºft pyproject.toml auf Konsistenz
        entry: python3 -c "import tomllib; f=open('pyproject.toml','rb'); config=tomllib.load(f); f.close(); print('‚úÖ pyproject.toml ist g√ºltig')"
        language: system
        files: ^pyproject\.toml$
        pass_filenames: false
